[{"/Users/anton/Documents/dev/warehouse/src/main.tsx":"1","/Users/anton/Documents/dev/warehouse/src/App.tsx":"2","/Users/anton/Documents/dev/warehouse/src/MainLayout.tsx":"3","/Users/anton/Documents/dev/warehouse/src/data.ts":"4","/Users/anton/Documents/dev/warehouse/src/modules/main/components/TableMain.tsx":"5","/Users/anton/Documents/dev/warehouse/src/modules/main/MainPage.tsx":"6","/Users/anton/Documents/dev/warehouse/src/components/Header.tsx":"7","/Users/anton/Documents/dev/warehouse/src/modules/item/ItemPage.tsx":"8","/Users/anton/Documents/dev/warehouse/src/modules/item/components/TableItem.tsx":"9","/Users/anton/Documents/dev/warehouse/src/api/api.ts":"10","/Users/anton/Documents/dev/warehouse/src/supabase.ts":"11","/Users/anton/Documents/dev/warehouse/src/modules/item/components/ItemInfo.tsx":"12","/Users/anton/Documents/dev/warehouse/src/modules/main/components/CreateItem.tsx":"13","/Users/anton/Documents/dev/warehouse/src/modules/item/components/CreateItem.tsx":"14","/Users/anton/Documents/dev/warehouse/src/modules/main/api/index.ts":"15","/Users/anton/Documents/dev/warehouse/src/api/index.ts":"16","/Users/anton/Documents/dev/warehouse/src/modules/item/api/index.ts":"17"},{"size":545,"mtime":1705785370194,"results":"18","hashOfConfig":"19"},{"size":996,"mtime":1705842089806,"results":"20","hashOfConfig":"19"},{"size":1581,"mtime":1705773767339,"results":"21","hashOfConfig":"19"},{"size":1374,"mtime":1705781190730,"results":"22","hashOfConfig":"19"},{"size":1820,"mtime":1706114809353,"results":"23","hashOfConfig":"19"},{"size":1731,"mtime":1706959968057,"results":"24","hashOfConfig":"19"},{"size":320,"mtime":1705772536461,"results":"25","hashOfConfig":"19"},{"size":3210,"mtime":1706965688717,"results":"26","hashOfConfig":"19"},{"size":2278,"mtime":1706117209011,"results":"27","hashOfConfig":"19"},{"size":1028,"mtime":1705831335096,"results":"28","hashOfConfig":"19"},{"size":191,"mtime":1706968597190,"results":"29","hashOfConfig":"19"},{"size":4325,"mtime":1706125586251,"results":"30","hashOfConfig":"19"},{"size":1824,"mtime":1706126356070,"results":"31","hashOfConfig":"19"},{"size":4318,"mtime":1706125962888,"results":"32","hashOfConfig":"19"},{"size":332,"mtime":1706965453448,"results":"33","hashOfConfig":"19"},{"size":1064,"mtime":1706965404848,"results":"34","hashOfConfig":"19"},{"size":690,"mtime":1706965453451,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"12hgkbv",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"39"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"39"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/anton/Documents/dev/warehouse/src/main.tsx",[],[],[],"/Users/anton/Documents/dev/warehouse/src/App.tsx",["96","97"],[],"// import { useState } from 'react';\nimport { Box, Container } from '@mui/material';\n\nimport { Header } from '@/components/Header.tsx';\nimport { Route, Routes } from 'react-router-dom';\nimport { MainPage } from '@/modules/main/MainPage.tsx';\nimport { ItemPage } from '@/modules/item/ItemPage.tsx';\nimport { useEffect } from 'react';\nimport { supabase } from '@/supabase.ts';\n\nconst boxShadowSettings = '12px 0 8px -4px rgba(0, 0, 0, 0.4), -12px 0 8px -4px rgba(0, 0, 0, 0.4)';\nconst App = () => {\n  // const [count, setCount] = useState(0);\n  return (\n    <>\n      <Container maxWidth=\"md\" disableGutters={true}>\n        <Box sx={{ bgcolor: '#f4f4f4', height: '100vh', boxShadow: boxShadowSettings }}>\n          <Header />\n          <Routes>\n            <Route path=\"/\" element={<MainPage />} />\n            <Route path=\"/main\" element={<MainPage />} />\n            <Route path=\"/main/:itemId\" element={<ItemPage />} />\n            <Route path=\"*\" element={<div>NOT FOUND</div>} />\n          </Routes>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","/Users/anton/Documents/dev/warehouse/src/MainLayout.tsx",[],[],"/Users/anton/Documents/dev/warehouse/src/data.ts",[],[],[],"/Users/anton/Documents/dev/warehouse/src/modules/main/components/TableMain.tsx",["98","99","100","101"],[],"import { TableRow, TableHead, Paper, TableContainer, TableCell, TableBody, Table } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { StacksType } from '@/modules/main/types/StacksType.ts';\nimport dayjs from 'dayjs';\n\ntype PropsType = {\n  rows: StacksType[];\n  deleteItem: (id: any) => void;\n};\nexport const TableMain = ({ rows, deleteItem }: PropsType) => {\n  const navigate = useNavigate();\n  const clickRowHandler = (row: any) => () => {\n    navigate(`/main/${row.id}`);\n  };\n\n  const deleteRowHandler = (e: any, id: any) => {\n    e.stopPropagation();\n    deleteItem(id);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 400 }}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Стенд</TableCell>\n            <TableCell align=\"left\">Создано</TableCell>\n            <TableCell align=\"left\">Описание</TableCell>\n            <TableCell align=\"left\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id} sx={{ '&:last-child td, &:last-child th': { border: 0 }, cursor: 'pointer' }} hover={true} onClick={clickRowHandler(row)}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"left\">{row.created && dayjs(row.created).format('DD.MM.YYYY HH:mm')}</TableCell>\n              <TableCell align=\"left\">{row.description}</TableCell>\n              <TableCell align=\"left\">\n                <span className={'delete-btn'} onClick={(e) => deleteRowHandler(e, row.id)}>\n                  Удалить\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","/Users/anton/Documents/dev/warehouse/src/modules/main/MainPage.tsx",[],[],"/Users/anton/Documents/dev/warehouse/src/components/Header.tsx",[],[],"/Users/anton/Documents/dev/warehouse/src/modules/item/ItemPage.tsx",[],[],"/Users/anton/Documents/dev/warehouse/src/modules/item/components/TableItem.tsx",["102","103","104"],[],"import { TableRow, TableHead, Paper, TableContainer, TableCell, TableBody, Table } from '@mui/material';\nimport { ItemType } from '@/modules/item/types/ItemType.ts';\nimport dayjs from 'dayjs';\n\ntype PropsType = {\n  rows: ItemType[];\n  getRowData: (row: ItemType) => void;\n  deleteItem: (id: any) => void;\n};\nexport const TableItem = ({ rows, getRowData, deleteItem }: PropsType) => {\n  const onRowClick = (row: ItemType) => () => {\n    getRowData(row);\n  };\n  const onClickDelete = (e: any, id: any) => {\n    e.stopPropagation();\n    deleteItem(id);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 400 }}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Название</TableCell>\n            <TableCell align=\"left\">Секция</TableCell>\n            <TableCell align=\"left\">Количество</TableCell>\n            <TableCell align=\"left\">Описание</TableCell>\n            <TableCell align=\"left\">Статус</TableCell>\n            <TableCell align=\"left\">Изменено</TableCell>\n            <TableCell align=\"left\">Кем изменено</TableCell>\n            <TableCell align=\"left\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.item_id} sx={{ '&:last-child td, &:last-child th': { border: 0 }, cursor: 'pointer' }} hover={true} onClick={onRowClick(row)}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"left\">{row.section}</TableCell>\n              <TableCell align=\"left\">{row.pcs}</TableCell>\n              <TableCell align=\"left\">{row.description}</TableCell>\n              <TableCell align=\"left\">{row.status}</TableCell>\n              <TableCell align=\"left\">{dayjs(row.updated).format('DD.MM.YYYY HH:mm')}</TableCell>\n              <TableCell align=\"left\">{row.updatedBy}</TableCell>\n              <TableCell align=\"left\">\n                <span className={'delete-btn'} onClick={(e) => onClickDelete(e, row.item_id)}>\n                  Удалить\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","/Users/anton/Documents/dev/warehouse/src/api/api.ts",["105"],[],"import { stand } from '../data';\n\nexport const getDataList = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(stand);\n    }, 400);\n  });\n};\n\nconsole.log(getDataList());\n","/Users/anton/Documents/dev/warehouse/src/supabase.ts",[],[],"/Users/anton/Documents/dev/warehouse/src/modules/item/components/ItemInfo.tsx",["106","107","108","109","110","111","112","113"],[],"import { useState } from 'react';\nimport { Box, Button, MenuItem, Select, Stack, TextField } from '@mui/material';\nimport { ItemType } from '@/modules/item/types/ItemType.ts';\nimport dayjs from 'dayjs';\n\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '20px; 40px',\n};\n\ntype PropsTypes = {\n  item: ItemType | null;\n  cancel: () => void;\n  onUpdate: (data: any) => void;\n};\nexport const ItemInfo = ({ item, cancel, onUpdate }: PropsTypes) => {\n  const [name, setName] = useState(item?.name);\n  const [pcs, setPcs] = useState(item?.pcs);\n  const [section, setSection] = useState(item?.section);\n  const [status, setStatus] = useState(item?.status);\n  const [updatedBy, setUpdatedBy] = useState(item?.updatedBy);\n  const [description, setDescription] = useState(item?.description);\n  const [error, setError] = useState(false);\n\n  const validation = (value: any) => {\n    return value.trim() !== '';\n  };\n  const nameHandler = (event: any) => {\n    setName(event.target.value);\n  };\n  const pcsHandler = (event: any) => {\n    setPcs(event.target.value);\n  };\n  const sectionHandler = (event: any) => {\n    setSection(event.target.value);\n  };\n  const statusHandler = (event: any) => {\n    setStatus(event.target.value);\n  };\n  const updatedByHandler = (event: any) => {\n    setUpdatedBy(event.target.value);\n  };\n  const descriptionHandler = (event: any) => {\n    setDescription(event.target.value);\n  };\n  const clickHandle = () => {\n    setError(false);\n    if (validation(name) && validation(section) && validation(updatedBy)) {\n      onUpdate({ name, pcs, section, status, updatedBy, description });\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <Box sx={containerStyle}>\n      <Box>\n        <div style={{ marginBottom: '5px' }}>Название*</div>\n        <TextField\n          sx={{ width: '100%' }}\n          error={!name && error}\n          value={name}\n          required={true}\n          placeholder=\"Название\"\n          variant=\"outlined\"\n          onChange={nameHandler}\n        />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Количество</div>\n        <TextField sx={{ width: '100%' }} value={pcs} placeholder=\"Количество\" variant=\"outlined\" onChange={pcsHandler} />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Секция*</div>\n        <TextField\n          sx={{ width: '100%' }}\n          error={!section && error}\n          required={true}\n          value={section}\n          placeholder=\"Секция\"\n          variant=\"outlined\"\n          onChange={sectionHandler}\n        />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Статус</div>\n        <Select sx={{ width: '100%' }} value={status} onChange={statusHandler}>\n          <MenuItem value={'На складе'}>На складе</MenuItem>\n          <MenuItem value={'На мероприятии'}>На мероприятии</MenuItem>\n        </Select>\n      </Box>\n\n      <Box sx={{ marginTop: '25px' }}>\n        Дата изменений\n        <div style={{ marginBottom: '5px' }}>{dayjs(item?.updated).format('DD.MM.YYYY HH:mm')}</div>\n      </Box>\n\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Кто изменил*</div>\n        <TextField\n          sx={{ width: '100%' }}\n          error={!updatedBy && error}\n          required={true}\n          value={updatedBy}\n          placeholder=\"Кто изменил\"\n          variant=\"outlined\"\n          onChange={updatedByHandler}\n        />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Описание</div>\n        <TextField sx={{ width: '100%' }} value={description} placeholder=\"Описание\" variant=\"outlined\" onChange={descriptionHandler} />\n      </Box>\n\n      <Box sx={{ marginTop: '25px' }}>фото</Box>\n      <Stack spacing={2} direction=\"row\">\n        <Button sx={{ fontWeight: 'regular' }} variant=\"outlined\" onClick={cancel}>\n          Отменить\n        </Button>\n        <Button sx={{ fontWeight: 'regular' }} variant=\"contained\" onClick={clickHandle}>\n          Сохранить\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n","/Users/anton/Documents/dev/warehouse/src/modules/main/components/CreateItem.tsx",["114","115","116","117"],[],"import { useState } from 'react';\nimport { Box, Button, Stack, TextField } from '@mui/material';\n\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '20px; 40px',\n};\n\ntype PropsTypes = {\n  cancel: () => void;\n  onCreate: (data: any) => void;\n};\nexport const CreateItem = ({ cancel, onCreate }: PropsTypes) => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState();\n  const [error, setError] = useState(false);\n\n  const validation = (value: any) => {\n    return value.trim() !== '';\n  };\n\n  const nameHandler = (event: any) => {\n    setName(event.target.value);\n  };\n  const descriptionHandler = (event: any) => {\n    setDescription(event.target.value);\n  };\n  const clickHandle = () => {\n    setError(false);\n    if (validation(name)) {\n      onCreate({ name, description });\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <Box sx={containerStyle}>\n      <Box>\n        <div style={{ marginBottom: '5px' }}>Название*</div>\n        <TextField required sx={{ width: '100%' }} error={!name && error} value={name} placeholder=\"Название\" variant=\"outlined\" onChange={nameHandler} />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Описание</div>\n        <TextField sx={{ width: '100%' }} value={description} placeholder=\"Описание\" variant=\"outlined\" onChange={descriptionHandler} />\n      </Box>\n      <Stack spacing={2} direction=\"row\" sx={{ marginTop: '25px' }}>\n        <Button sx={{ fontWeight: 'regular' }} variant=\"outlined\" onClick={cancel}>\n          Отменить\n        </Button>\n        <Button sx={{ fontWeight: 'regular' }} variant=\"contained\" onClick={clickHandle}>\n          Сохранить\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n","/Users/anton/Documents/dev/warehouse/src/modules/item/components/CreateItem.tsx",["118","119","120","121","122","123","124","125","126"],[],"import { useState } from 'react';\nimport { Box, Button, MenuItem, Select, Stack, TextField } from '@mui/material';\n\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '20px; 40px',\n};\n\ntype PropsTypes = {\n  cancel: () => void;\n  onCreate: (data: any) => void;\n};\n\nexport const CreateItem = ({ cancel, onCreate }: PropsTypes) => {\n  const [name, setName] = useState('');\n  const [pcs, setPcs] = useState();\n  const [section, setSection] = useState('');\n  const [status, setStatus] = useState();\n  const [created_at, setCreated] = useState();\n  const [description, setDescription] = useState();\n  const [updatedBy, setUpdatedBy] = useState('');\n  const [error, setError] = useState(false);\n\n  const validation = (value: any) => {\n    return value.trim() !== '';\n  };\n\n  const nameHandler = (event: any) => {\n    setName(event.target.value);\n  };\n  const pcsHandler = (event: any) => {\n    setPcs(event.target.value);\n  };\n\n  const sectionHandler = (event: any) => {\n    setSection(event.target.value);\n  };\n\n  const statusHandler = (event: any) => {\n    setStatus(event.target.value);\n  };\n\n  const createdHandler = (event: any) => {\n    setCreated(event.target.value);\n  };\n\n  const updatedByHandler = (event: any) => {\n    setUpdatedBy(event.target.value);\n  };\n\n  const descriptionHandler = (event: any) => {\n    setDescription(event.target.value);\n  };\n  const clickHandle = () => {\n    setError(false);\n    if (validation(name) && validation(section) && validation(updatedBy)) {\n      onCreate({ name, description, section, pcs, status, created_at, updatedBy });\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <Box sx={containerStyle}>\n      <Box>\n        <div style={{ marginBottom: '5px' }}>Название*</div>\n        <TextField\n          sx={{ width: '100%' }}\n          error={!name && error}\n          required={true}\n          value={name}\n          placeholder=\"Название\"\n          variant=\"outlined\"\n          onChange={nameHandler}\n        />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Секция*</div>\n        <TextField\n          sx={{ width: '100%' }}\n          error={!section && error}\n          required={true}\n          value={section}\n          placeholder=\"Секция\"\n          variant=\"outlined\"\n          onChange={sectionHandler}\n        />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Количество</div>\n        <TextField sx={{ width: '100%' }} value={pcs} placeholder=\"Количество\" variant=\"outlined\" onChange={pcsHandler} />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Статус</div>\n        <Select sx={{ width: '100%' }} value={status} onChange={statusHandler}>\n          <MenuItem value={'На складе'}>На складе</MenuItem>\n          <MenuItem value={'На мероприятии'}>На мероприятии</MenuItem>\n        </Select>\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Дата внесения</div>\n        <TextField sx={{ width: '100%' }} value={created_at} placeholder=\"Дата внесения\" variant=\"outlined\" onChange={createdHandler} />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Имя*</div>\n        <TextField\n          sx={{ width: '100%' }}\n          error={!updatedBy && error}\n          required={true}\n          value={updatedBy}\n          placeholder=\"Имя\"\n          variant=\"outlined\"\n          onChange={updatedByHandler}\n        />\n      </Box>\n      <Box sx={{ marginTop: '25px' }}>\n        <div style={{ marginBottom: '5px' }}>Описание</div>\n        <TextField sx={{ width: '100%' }} value={description} placeholder=\"Описание\" variant=\"outlined\" onChange={descriptionHandler} />\n      </Box>\n      <Stack sx={{ marginTop: '25px' }} spacing={2} direction=\"row\">\n        <Button sx={{ fontWeight: 'regular' }} variant=\"outlined\" onClick={cancel}>\n          Отменить\n        </Button>\n        <Button sx={{ fontWeight: 'regular' }} variant=\"contained\" onClick={clickHandle}>\n          Сохранить\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n","/Users/anton/Documents/dev/warehouse/src/modules/main/api/index.ts",[],[],"/Users/anton/Documents/dev/warehouse/src/api/index.ts",[],[],"/Users/anton/Documents/dev/warehouse/src/modules/item/api/index.ts",[],[],{"ruleId":"127","severity":1,"message":"128","line":8,"column":10,"nodeType":"129","messageId":"130","endLine":8,"endColumn":19},{"ruleId":"127","severity":1,"message":"131","line":9,"column":10,"nodeType":"129","messageId":"130","endLine":9,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":8,"column":20,"nodeType":"134","messageId":"135","endLine":8,"endColumn":23,"suggestions":"136"},{"ruleId":"132","severity":1,"message":"133","line":12,"column":33,"nodeType":"134","messageId":"135","endLine":12,"endColumn":36,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"133","line":16,"column":32,"nodeType":"134","messageId":"135","endLine":16,"endColumn":35,"suggestions":"138"},{"ruleId":"132","severity":1,"message":"133","line":16,"column":41,"nodeType":"134","messageId":"135","endLine":16,"endColumn":44,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"133","line":8,"column":20,"nodeType":"134","messageId":"135","endLine":8,"endColumn":23,"suggestions":"140"},{"ruleId":"132","severity":1,"message":"133","line":14,"column":29,"nodeType":"134","messageId":"135","endLine":14,"endColumn":32,"suggestions":"141"},{"ruleId":"132","severity":1,"message":"133","line":14,"column":38,"nodeType":"134","messageId":"135","endLine":14,"endColumn":41,"suggestions":"142"},{"ruleId":"127","severity":1,"message":"143","line":4,"column":32,"nodeType":"129","messageId":"130","endLine":4,"endColumn":38},{"ruleId":"132","severity":1,"message":"133","line":15,"column":20,"nodeType":"134","messageId":"135","endLine":15,"endColumn":23,"suggestions":"144"},{"ruleId":"132","severity":1,"message":"133","line":26,"column":30,"nodeType":"134","messageId":"135","endLine":26,"endColumn":33,"suggestions":"145"},{"ruleId":"132","severity":1,"message":"133","line":29,"column":31,"nodeType":"134","messageId":"135","endLine":29,"endColumn":34,"suggestions":"146"},{"ruleId":"132","severity":1,"message":"133","line":32,"column":30,"nodeType":"134","messageId":"135","endLine":32,"endColumn":33,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"133","line":35,"column":34,"nodeType":"134","messageId":"135","endLine":35,"endColumn":37,"suggestions":"148"},{"ruleId":"132","severity":1,"message":"133","line":38,"column":33,"nodeType":"134","messageId":"135","endLine":38,"endColumn":36,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"133","line":41,"column":36,"nodeType":"134","messageId":"135","endLine":41,"endColumn":39,"suggestions":"150"},{"ruleId":"132","severity":1,"message":"133","line":44,"column":38,"nodeType":"134","messageId":"135","endLine":44,"endColumn":41,"suggestions":"151"},{"ruleId":"132","severity":1,"message":"133","line":12,"column":20,"nodeType":"134","messageId":"135","endLine":12,"endColumn":23,"suggestions":"152"},{"ruleId":"132","severity":1,"message":"133","line":19,"column":30,"nodeType":"134","messageId":"135","endLine":19,"endColumn":33,"suggestions":"153"},{"ruleId":"132","severity":1,"message":"133","line":23,"column":31,"nodeType":"134","messageId":"135","endLine":23,"endColumn":34,"suggestions":"154"},{"ruleId":"132","severity":1,"message":"133","line":26,"column":38,"nodeType":"134","messageId":"135","endLine":26,"endColumn":41,"suggestions":"155"},{"ruleId":"132","severity":1,"message":"133","line":12,"column":20,"nodeType":"134","messageId":"135","endLine":12,"endColumn":23,"suggestions":"156"},{"ruleId":"132","severity":1,"message":"133","line":25,"column":30,"nodeType":"134","messageId":"135","endLine":25,"endColumn":33,"suggestions":"157"},{"ruleId":"132","severity":1,"message":"133","line":29,"column":31,"nodeType":"134","messageId":"135","endLine":29,"endColumn":34,"suggestions":"158"},{"ruleId":"132","severity":1,"message":"133","line":32,"column":30,"nodeType":"134","messageId":"135","endLine":32,"endColumn":33,"suggestions":"159"},{"ruleId":"132","severity":1,"message":"133","line":36,"column":34,"nodeType":"134","messageId":"135","endLine":36,"endColumn":37,"suggestions":"160"},{"ruleId":"132","severity":1,"message":"133","line":40,"column":33,"nodeType":"134","messageId":"135","endLine":40,"endColumn":36,"suggestions":"161"},{"ruleId":"132","severity":1,"message":"133","line":44,"column":34,"nodeType":"134","messageId":"135","endLine":44,"endColumn":37,"suggestions":"162"},{"ruleId":"132","severity":1,"message":"133","line":48,"column":36,"nodeType":"134","messageId":"135","endLine":48,"endColumn":39,"suggestions":"163"},{"ruleId":"132","severity":1,"message":"133","line":52,"column":38,"nodeType":"134","messageId":"135","endLine":52,"endColumn":41,"suggestions":"164"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'supabase' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["165","166"],["167","168"],["169","170"],["171","172"],["173","174"],["175","176"],["177","178"],"'reject' is defined but never used.",["179","180"],["181","182"],["183","184"],["185","186"],["187","188"],["189","190"],["191","192"],["193","194"],["195","196"],["197","198"],["199","200"],["201","202"],["203","204"],["205","206"],["207","208"],["209","210"],["211","212"],["213","214"],["215","216"],["217","218"],["219","220"],{"messageId":"221","fix":"222","desc":"223"},{"messageId":"224","fix":"225","desc":"226"},{"messageId":"221","fix":"227","desc":"223"},{"messageId":"224","fix":"228","desc":"226"},{"messageId":"221","fix":"229","desc":"223"},{"messageId":"224","fix":"230","desc":"226"},{"messageId":"221","fix":"231","desc":"223"},{"messageId":"224","fix":"232","desc":"226"},{"messageId":"221","fix":"233","desc":"223"},{"messageId":"224","fix":"234","desc":"226"},{"messageId":"221","fix":"235","desc":"223"},{"messageId":"224","fix":"236","desc":"226"},{"messageId":"221","fix":"237","desc":"223"},{"messageId":"224","fix":"238","desc":"226"},{"messageId":"221","fix":"239","desc":"223"},{"messageId":"224","fix":"240","desc":"226"},{"messageId":"221","fix":"241","desc":"223"},{"messageId":"224","fix":"242","desc":"226"},{"messageId":"221","fix":"243","desc":"223"},{"messageId":"224","fix":"244","desc":"226"},{"messageId":"221","fix":"245","desc":"223"},{"messageId":"224","fix":"246","desc":"226"},{"messageId":"221","fix":"247","desc":"223"},{"messageId":"224","fix":"248","desc":"226"},{"messageId":"221","fix":"249","desc":"223"},{"messageId":"224","fix":"250","desc":"226"},{"messageId":"221","fix":"251","desc":"223"},{"messageId":"224","fix":"252","desc":"226"},{"messageId":"221","fix":"253","desc":"223"},{"messageId":"224","fix":"254","desc":"226"},{"messageId":"221","fix":"255","desc":"223"},{"messageId":"224","fix":"256","desc":"226"},{"messageId":"221","fix":"257","desc":"223"},{"messageId":"224","fix":"258","desc":"226"},{"messageId":"221","fix":"259","desc":"223"},{"messageId":"224","fix":"260","desc":"226"},{"messageId":"221","fix":"261","desc":"223"},{"messageId":"224","fix":"262","desc":"226"},{"messageId":"221","fix":"263","desc":"223"},{"messageId":"224","fix":"264","desc":"226"},{"messageId":"221","fix":"265","desc":"223"},{"messageId":"224","fix":"266","desc":"226"},{"messageId":"221","fix":"267","desc":"223"},{"messageId":"224","fix":"268","desc":"226"},{"messageId":"221","fix":"269","desc":"223"},{"messageId":"224","fix":"270","desc":"226"},{"messageId":"221","fix":"271","desc":"223"},{"messageId":"224","fix":"272","desc":"226"},{"messageId":"221","fix":"273","desc":"223"},{"messageId":"224","fix":"274","desc":"226"},{"messageId":"221","fix":"275","desc":"223"},{"messageId":"224","fix":"276","desc":"226"},{"messageId":"221","fix":"277","desc":"223"},{"messageId":"224","fix":"278","desc":"226"},{"messageId":"221","fix":"279","desc":"223"},{"messageId":"224","fix":"280","desc":"226"},"suggestUnknown",{"range":"281","text":"282"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"281","text":"283"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"284","text":"282"},{"range":"284","text":"283"},{"range":"285","text":"282"},{"range":"285","text":"283"},{"range":"286","text":"282"},{"range":"286","text":"283"},{"range":"287","text":"282"},{"range":"287","text":"283"},{"range":"288","text":"282"},{"range":"288","text":"283"},{"range":"289","text":"282"},{"range":"289","text":"283"},{"range":"290","text":"282"},{"range":"290","text":"283"},{"range":"291","text":"282"},{"range":"291","text":"283"},{"range":"292","text":"282"},{"range":"292","text":"283"},{"range":"293","text":"282"},{"range":"293","text":"283"},{"range":"294","text":"282"},{"range":"294","text":"283"},{"range":"295","text":"282"},{"range":"295","text":"283"},{"range":"296","text":"282"},{"range":"296","text":"283"},{"range":"297","text":"282"},{"range":"297","text":"283"},{"range":"298","text":"282"},{"range":"298","text":"283"},{"range":"299","text":"282"},{"range":"299","text":"283"},{"range":"300","text":"282"},{"range":"300","text":"283"},{"range":"301","text":"282"},{"range":"301","text":"283"},{"range":"302","text":"282"},{"range":"302","text":"283"},{"range":"303","text":"282"},{"range":"303","text":"283"},{"range":"304","text":"282"},{"range":"304","text":"283"},{"range":"305","text":"282"},{"range":"305","text":"283"},{"range":"306","text":"282"},{"range":"306","text":"283"},{"range":"307","text":"282"},{"range":"307","text":"283"},{"range":"308","text":"282"},{"range":"308","text":"283"},{"range":"309","text":"282"},{"range":"309","text":"283"},{"range":"310","text":"282"},{"range":"310","text":"283"},[306,309],"unknown","never",[453,456],[539,542],[548,551],[291,294],[486,489],[495,498],[390,393],[888,891],[965,968],[1042,1045],[1122,1125],[1205,1208],[1290,1293],[1380,1383],[259,262],[509,512],[587,590],[672,675],[277,280],[749,752],[827,830],[904,907],[985,988],[1069,1072],[1153,1156],[1240,1243],[1331,1334]]